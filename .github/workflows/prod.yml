name: Production

on:
  push:
    branches: [ master ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: europe-west3

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ghcr.io/dailypartner/ui
        tags: |
          type=semver,pattern={{version}}
          type=sha
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1.10.0
      with:
        registry: ghcr.io
        username: r03t
        password: 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

    - name: Build and push
      id: docker_build_ui
      uses: docker/build-push-action@v2
      with:
        registry: ghcr.io
        file: ./Dockerfile
        push: true
        tags: |
          ${{ steps.meta.outputs.tags }}
          ghcr.io/dailypartner/ui:latest
        cache-from: type=registry,ref=ghcr.io/dailypartner/ui:latest
        cache-to: type=inline

  deploy: 
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
    - run: |-
        gcloud --quiet auth configure-docker
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ghcr.io/dailypartner/ui
        tags: |
          type=semver,pattern={{version}}
          type=sha

    - name: Deploy
      run: |-
        kubectl set image deploy ui -n prod ui-1=${{ steps.meta.outputs.tags }}
        kubectl rollout restart deploy ui -n prod